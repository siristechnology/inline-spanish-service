# Node.js Function App to Linux on Azure
# Build a Node.js function app and deploy it to Azure as a Linux function app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
    - master

variables:
    # Azure Resource Manager connection created during pipeline creation
    azureSubscription: '1e945fce-64c9-44ed-b04d-f2988813d3e1'

    functionAppName: 'inline-spanish-service-qa'

    environmentName: 'inline-spanish-service-qa'

    vmImageName: 'ubuntu-latest'

stages:
    - stage: Build
      displayName: Build stage
      jobs:
          - job: Build
            displayName: Build
            pool:
                vmImage: $(vmImageName)

            steps:
                - task: NodeTool@0
                  inputs:
                      versionSpec: '10.x'
                  displayName: 'Install Node.js'

                - script: |
                      yarn
                      yarn test                  
                  displayName: 'YARN build'

                - task: ArchiveFiles@2
                  displayName: 'Archive files'
                  inputs:
                      rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
                      includeRootFolder: false
                      archiveType: zip
                      archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
                      replaceExistingArchive: true

                - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
                  artifact: drop

    - stage: Deploy
      displayName: Deploy stage
      dependsOn: Build
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
      jobs:
          - deployment: Deploy
            displayName: Deploy
            environment: $(environmentName)
            pool:
                vmImage: $(vmImageName)
            strategy:
                runOnce:
                    deploy:
                        steps:
                            - task: AzureFunctionApp@1
                              displayName: 'Azure Functions App Deploy: inline-spanish-service-qa'
                              inputs:
                                  azureSubscription: '$(azureSubscription)'
                                  appType: functionAppLinux
                                  appName: $(functionAppName)
                                  package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
